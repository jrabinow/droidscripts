#!/usr/bin/env bash

set -e -u
set -o pipefail

# write some cool doc here

function usage ()
{
    cat << EOF
Usage: $(basename $0) [OPTION]...
Options: --help, -h: show this help dialog
EOF
}

function main ()
{
    while getopts "h-:" opt; do
        case ${opt} in
            h)  # help message
                usage
                exit 0
                ;;
            -)
                case "${OPTARG}" in
                    help)
                        usage
                        exit 0
                        ;;
                    *)
                        printf 'Unknown option, exiting now\n' >&2
                        exit 1
                        ;;
                esac
                ;;
            ?)
                printf 'Unknown option, exiting now\n' >&2
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))
    [[ "${1:-}" == '--' ]] && shift

    if [ $(adb devices|wc -l) == 2 ]; then
        printf "Error: no devices available\n" >&2
        exit 1
    fi
    scriptfile="${1}"; shift
    if [ ! -x "${scriptfile}" ]; then
        printf "Error: script not executable\n" >&2
        exit 1
    fi

    script="$(basename "${scriptfile}")"

    adb push "${scriptfile}" /sdcard/
    adb shell "su -c 'mv \"/sdcard/${script}\" /cache/; sed -i \"s%^#!/usr/bin/env %#!/system/bin/env %\" \"/cache/${script}\"; chmod +x \"/cache/${script}\"; PATH=/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/sbin:\$PATH \"/cache/${script}\" $@; rm \"/cache/${script}\"'"
}

if [ "${BASH_SOURCE[0]}" == "$0" ]; then
    main "$@"
fi
